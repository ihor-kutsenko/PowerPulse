{"version":3,"file":"static/js/498.2923af92.chunk.js","mappings":"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","sources":["components/Buttons/Button.jsx","webpack://react-homework-template/./src/components/Title/Title.module.scss?ae23","components/Title/Title.jsx","schema/signInSchema.js","components/SignInForm/SignInForm.jsx","pages/SignInPage/SignInPage.jsx","webpack://react-homework-template/./src/components/SignUpForm/SignUpForm.module.scss?b627","webpack://react-homework-template/./src/pages/SignUpPage/SignUpPage.module.scss?b9f7"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ text, className, disabled, type, onClick }) => {\r\n  return (\r\n    <button\r\n      className={className}\r\n      disabled={disabled}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  type: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__IlEm8\"};","import PropTypes from 'prop-types';\nimport styles from './Title.module.scss';\n\nconst Title = ({ text, className }) => {\n  const titleClass = `${styles.title} ${className || ''}`;\n\n  return <h2 className={titleClass}>{text}</h2>;\n};\n\nexport default Title;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n","import * as yup from 'yup';\r\n\r\nconst signInSchema = yup.object().shape({\r\n  email: yup.string().email('Invalid email format').required('Required field!'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'Must contain minimum 6 symbols!')\r\n    .required('Required field!'),\r\n});\r\n\r\nexport default signInSchema;\r\n","import { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Svg from 'components/Svg/Svg';\r\nimport Button from 'components/Buttons/Button';\r\nimport { loginUser } from 'redux/auth/authOperations';\r\nimport signInSchema from 'schema/signInSchema';\r\nimport styles from '../SignUpForm/SignUpForm.module.scss';\r\n\r\nconst SignInForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const initialValues = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const handleSubmit = ({ email, password }, { resetForm }) => {\r\n    dispatch(loginUser({ email, password }));\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={signInSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {formik => (\r\n          <Form className={styles.form}>\r\n            <div className={styles.formWrapper}>\r\n              <div\r\n                className={`${styles.fieldWrapper} ${\r\n                  formik.touched.email && formik.errors.email\r\n                    ? `${styles.error}`\r\n                    : formik.touched.email && !formik.errors.email\r\n                    ? `${styles.success}`\r\n                    : ''\r\n                }`}\r\n              >\r\n                <Field\r\n                  className={styles.field}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <div className={styles.messageWrapper}>\r\n                  <Svg\r\n                    data-status=\"error\"\r\n                    className={styles.svgError}\r\n                    iconId={'icon-error'}\r\n                  />\r\n\r\n                  <ErrorMessage\r\n                    className={styles.errorMessage}\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                  />\r\n                </div>\r\n\r\n                {formik.touched.email && !formik.errors.email && (\r\n                  <div className={styles.messageWrapper}>\r\n                    <Svg\r\n                      data-status=\"success\"\r\n                      className={styles.svgSuccess}\r\n                      iconId={'icon-success'}\r\n                    />\r\n                    <div className={styles.successMessage}>Success email</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div\r\n                className={`${styles.fieldWrapper} ${\r\n                  formik.touched.password && formik.errors.password\r\n                    ? `${styles.error}`\r\n                    : formik.touched.password && !formik.errors.password\r\n                    ? `${styles.success}`\r\n                    : ''\r\n                }`}\r\n              >\r\n                <Field\r\n                  className={styles.field}\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n\r\n                <div className={styles.messageWrapper}>\r\n                  <Svg\r\n                    data-status=\"error\"\r\n                    className={styles.svgError}\r\n                    iconId={'icon-error'}\r\n                  />\r\n\r\n                  <ErrorMessage\r\n                    className={styles.errorMessage}\r\n                    name=\"password\"\r\n                    component=\"div\"\r\n                  />\r\n                </div>\r\n\r\n                {formik.touched.password && !formik.errors.password && (\r\n                  <div className={styles.messageWrapper}>\r\n                    <Svg\r\n                      data-status=\"success\"\r\n                      className={styles.svgSuccess}\r\n                      iconId={'icon-success'}\r\n                    />\r\n                    <div className={styles.successMessage}>\r\n                      Success password\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <button\r\n                  className={styles.buttonEye}\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? (\r\n                    <Svg className={styles.svgEye} iconId={'icon-eye'} />\r\n                  ) : (\r\n                    <Svg className={styles.svgEye} iconId={'icon-eye-off'} />\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <Button type=\"submit\" text=\"Sign In\" className={styles.button} />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport Container from 'components/Container/Container';\r\nimport SectionUserGateway from 'components/SectionUserGateway/SectionUserGateway';\r\nimport HomeBG from 'components/HomeBG/HomeBG';\r\nimport SignInForm from 'components/SignInForm/SignInForm';\r\nimport Title from 'components/Title/Title';\r\nimport { SIGN_UP_ROUTE } from 'routes/constants';\r\n\r\nimport style from '../../components/HomeBG/HomeBG.module.scss';\r\nimport styles from '../SignUpPage/SignUpPage.module.scss';\r\n\r\nconst SignInPage = () => {\r\n  return (\r\n    <Container>\r\n      <SectionUserGateway>\r\n        <div>\r\n          <div className={styles.wrapperTitle}>\r\n            <Title text=\"Sign In\" className={styles.title} />\r\n            <p className={styles.text}>\r\n              Welcome! Please enter your credentials to login to the platform:\r\n            </p>\r\n          </div>\r\n          <SignInForm />\r\n          <div className={styles.textWrapper}>\r\n            <p className={styles.textHint}>Don’t have an account? </p>\r\n            <Link className={styles.textLink} to={SIGN_UP_ROUTE}>\r\n              Sign Up\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <HomeBG className={style.auth}>\r\n          <div></div>\r\n        </HomeBG>\r\n      </SectionUserGateway>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignUpForm_form__CGOfo\",\"formWrapper\":\"SignUpForm_formWrapper__IUMSk\",\"fieldWrapper\":\"SignUpForm_fieldWrapper__GDU0i\",\"error\":\"SignUpForm_error__YZ0dN\",\"success\":\"SignUpForm_success__fasOJ\",\"svgError\":\"SignUpForm_svgError__luZjn\",\"field\":\"SignUpForm_field__JbRwK\",\"messageWrapper\":\"SignUpForm_messageWrapper__Xb+yB\",\"svgSuccess\":\"SignUpForm_svgSuccess__HWjAm\",\"errorMessage\":\"SignUpForm_errorMessage__-LhBb\",\"successMessage\":\"SignUpForm_successMessage__6py5I\",\"buttonEye\":\"SignUpForm_buttonEye__r-Qpc\",\"svgEye\":\"SignUpForm_svgEye__NaKlJ\",\"button\":\"SignUpForm_button__Zna-C\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapperTitle\":\"SignUpPage_wrapperTitle__yH+iR\",\"title\":\"SignUpPage_title__jeE8g\",\"text\":\"SignUpPage_text__hZwhQ\",\"textWrapper\":\"SignUpPage_textWrapper__N1Qto\",\"textHint\":\"SignUpPage_textHint__rH3Zo\",\"textLink\":\"SignUpPage_textLink__wBuPq\"};"],"names":["_ref","text","className","disabled","type","onClick","_jsx","children","titleClass","concat","styles","yup","shape","email","required","password","min","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_Fragment","Formik","initialValues","validationSchema","signInSchema","onSubmit","_ref2","resetForm","loginUser","formik","_jsxs","Form","touched","errors","Field","name","placeholder","Svg","iconId","ErrorMessage","component","Button","Container","SectionUserGateway","Title","SignInForm","Link","to","SIGN_UP_ROUTE","HomeBG","style"],"sourceRoot":""}