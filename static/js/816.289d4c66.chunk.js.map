{"version":3,"file":"static/js/816.289d4c66.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","webpack://react-homework-template/./src/components/Title/Title.module.scss?ae23","components/Title/Title.jsx","schema/signUpSchema.js","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx","webpack://react-homework-template/./src/components/SignUpForm/SignUpForm.module.scss?b627","webpack://react-homework-template/./src/pages/SignUpPage/SignUpPage.module.scss?b9f7"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ text, className, disabled, type }) => {\n  return (\n    <button className={className} disabled={disabled} type={type}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  type: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__IlEm8\"};","import PropTypes from 'prop-types';\nimport styles from './Title.module.scss';\n\nconst Title = ({ text, className }) => {\n  const titleClass = `${styles.title} ${className || ''}`;\n\n  return <h2 className={titleClass}>{text}</h2>;\n};\n\nexport default Title;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n","import * as Yup from 'yup';\n\nconst signUpSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short! Must be minimum 2 symbols')\n    .max(32, 'Too Long! 32symbols - is maximum.')\n    .required('Name is required!'),\n  email: Yup.string()\n    .email('Invalid email format. Here is a valid email: example@gmail.com')\n    .required('Email is required!'),\n  password: Yup.string()\n    .min(6, 'Must contain minimum 6 symbols!')\n    .max(32, 'Too Long! 32 symbols - is maximum.')\n    .required('Password is required!'),\n});\n\nexport default signUpSchema;\n","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { useState } from 'react';\n\nimport Svg from 'components/Svg/Svg';\nimport Button from 'components/Button/Button';\nimport signUpSchema from 'schema/signUpSchema';\nimport styles from './SignUpForm.module.scss';\n\nconst SignUpForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={signUpSchema}\n        onSubmit={handleSubmit}\n      >\n        {formik => (\n          <Form className={styles.form}>\n            <div className={styles.formWrapper}>\n              <div\n                className={`${styles.fieldWrapper} ${\n                  formik.touched.name && formik.errors.name\n                    ? `${styles.error}`\n                    : formik.touched.name && !formik.errors.name\n                    ? `${styles.success}`\n                    : ''\n                }`}\n              >\n                <Field\n                  className={styles.field}\n                  type=\"name\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                />\n                <div className={styles.messageWrapper}>\n                  <Svg\n                    data-status=\"error\"\n                    className={styles.svgError}\n                    iconId={'icon-error'}\n                  />\n\n                  <ErrorMessage\n                    className={styles.errorMessage}\n                    name=\"name\"\n                    component=\"div\"\n                  />\n                </div>\n\n                {formik.touched.name && !formik.errors.name && (\n                  <div className={styles.messageWrapper}>\n                    <Svg\n                      data-status=\"success\"\n                      className={styles.svgSuccess}\n                      iconId={'icon-success'}\n                    />\n                    <div className={styles.successMessage}>Success name</div>\n                  </div>\n                )}\n              </div>\n\n              <div\n                className={`${styles.fieldWrapper} ${\n                  formik.touched.email && formik.errors.email\n                    ? `${styles.error}`\n                    : formik.touched.email && !formik.errors.email\n                    ? `${styles.success}`\n                    : ''\n                }`}\n              >\n                <Field\n                  className={styles.field}\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                />\n                <div className={styles.messageWrapper}>\n                  <Svg\n                    data-status=\"error\"\n                    className={styles.svgError}\n                    iconId={'icon-error'}\n                  />\n\n                  <ErrorMessage\n                    className={styles.errorMessage}\n                    name=\"email\"\n                    component=\"div\"\n                  />\n                </div>\n\n                {formik.touched.email && !formik.errors.email && (\n                  <div className={styles.messageWrapper}>\n                    <Svg\n                      data-status=\"success\"\n                      className={styles.svgSuccess}\n                      iconId={'icon-success'}\n                    />\n                    <div className={styles.successMessage}>Success email</div>\n                  </div>\n                )}\n              </div>\n\n              <div\n                className={`${styles.fieldWrapper} ${\n                  formik.touched.password && formik.errors.password\n                    ? `${styles.error}`\n                    : formik.touched.password && !formik.errors.password\n                    ? `${styles.success}`\n                    : ''\n                }`}\n              >\n                <Field\n                  className={styles.field}\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                />\n\n                <div className={styles.messageWrapper}>\n                  <Svg\n                    data-status=\"error\"\n                    className={styles.svgError}\n                    iconId={'icon-error'}\n                  />\n\n                  <ErrorMessage\n                    className={styles.errorMessage}\n                    name=\"password\"\n                    component=\"div\"\n                  />\n                </div>\n\n                {formik.touched.password && !formik.errors.password && (\n                  <div className={styles.messageWrapper}>\n                    <Svg\n                      data-status=\"success\"\n                      className={styles.svgSuccess}\n                      iconId={'icon-success'}\n                    />\n                    <div className={styles.successMessage}>\n                      Success password\n                    </div>\n                  </div>\n                )}\n                <button\n                  className={styles.buttonEye}\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <Svg className={styles.svgEye} iconId={'icon-eye'} />\n                  ) : (\n                    <Svg className={styles.svgEye} iconId={'icon-eye-off'} />\n                  )}\n                </button>\n              </div>\n            </div>\n            <Button type=\"submit\" text=\"Sign In\" className={styles.button} />\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default SignUpForm;\n","import { Link } from 'react-router-dom';\n\nimport Container from 'components/Container/Container';\nimport SectionUserGateway from 'components/SectionUserGateway/SectionUserGateway';\nimport HomeBG from 'components/HomeBG/HomeBG';\nimport SignUpForm from 'components/SignUpForm/SignUpForm';\nimport Title from 'components/Title/Title';\nimport { SIGN_IN_ROUTE } from 'routes/routes';\n\nimport style from '../../components/HomeBG/HomeBG.module.scss';\nimport styles from './SignUpPage.module.scss';\n\nconst SignUpPage = () => {\n  return (\n    <Container>\n      <SectionUserGateway>\n        <div>\n          <div className={styles.wrapperTitle}>\n            <Title text=\"Sign Up\" className={styles.title} />\n            <p className={styles.text}>\n              Thank you for your interest in our platform. To complete the\n              registration process, please provide us with the following\n              information.\n            </p>\n          </div>\n\n          <SignUpForm />\n          <div className={styles.textWrapper}>\n            <p className={styles.textHint}>Already have account? </p>\n            <Link className={styles.textLink} to={SIGN_IN_ROUTE}>\n              Sign In\n            </Link>\n          </div>\n        </div>\n\n        <HomeBG className={style.auth}>\n          <div></div>\n        </HomeBG>\n      </SectionUserGateway>\n    </Container>\n  );\n};\n\nexport default SignUpPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignUpForm_form__CGOfo\",\"formWrapper\":\"SignUpForm_formWrapper__IUMSk\",\"fieldWrapper\":\"SignUpForm_fieldWrapper__GDU0i\",\"error\":\"SignUpForm_error__YZ0dN\",\"success\":\"SignUpForm_success__fasOJ\",\"svgError\":\"SignUpForm_svgError__luZjn\",\"field\":\"SignUpForm_field__JbRwK\",\"messageWrapper\":\"SignUpForm_messageWrapper__Xb+yB\",\"svgSuccess\":\"SignUpForm_svgSuccess__HWjAm\",\"errorMessage\":\"SignUpForm_errorMessage__-LhBb\",\"successMessage\":\"SignUpForm_successMessage__6py5I\",\"buttonEye\":\"SignUpForm_buttonEye__r-Qpc\",\"svgEye\":\"SignUpForm_svgEye__NaKlJ\",\"button\":\"SignUpForm_button__Zna-C\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapperTitle\":\"SignUpPage_wrapperTitle__yH+iR\",\"title\":\"SignUpPage_title__jeE8g\",\"text\":\"SignUpPage_text__hZwhQ\",\"textWrapper\":\"SignUpPage_textWrapper__N1Qto\",\"textHint\":\"SignUpPage_textHint__rH3Zo\",\"textLink\":\"SignUpPage_textLink__wBuPq\"};"],"names":["_ref","text","className","disabled","type","_jsx","children","titleClass","concat","styles","Yup","shape","name","min","max","required","email","password","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_Fragment","Formik","initialValues","validationSchema","signUpSchema","onSubmit","_ref2","resetForm","formik","_jsxs","Form","touched","errors","Field","placeholder","Svg","iconId","ErrorMessage","component","onClick","Button","Container","SectionUserGateway","Title","SignUpForm","Link","to","SIGN_IN_ROUTE","HomeBG","style"],"sourceRoot":""}