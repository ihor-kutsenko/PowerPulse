{"version":3,"file":"static/js/816.31964128.chunk.js","mappings":"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","sources":["components/Buttons/Button.jsx","webpack://react-homework-template/./src/components/Title/Title.module.scss?ae23","components/Title/Title.jsx","schema/signUpSchema.js","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx","webpack://react-homework-template/./src/components/SignUpForm/SignUpForm.module.scss?b627","webpack://react-homework-template/./src/pages/SignUpPage/SignUpPage.module.scss?b9f7"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ text, className, disabled, type, onClick }) => {\r\n  return (\r\n    <button\r\n      className={className}\r\n      disabled={disabled}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  type: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__IlEm8\"};","import PropTypes from 'prop-types';\nimport styles from './Title.module.scss';\n\nconst Title = ({ text, className }) => {\n  const titleClass = `${styles.title} ${className || ''}`;\n\n  return <h2 className={titleClass}>{text}</h2>;\n};\n\nexport default Title;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n","import * as Yup from 'yup';\n\nconst signUpSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short! Must be minimum 2 symbols')\n    .max(32, 'Too Long! 32symbols - is maximum.')\n    .required('Name is required!'),\n  email: Yup.string()\n    .email('Invalid email format. Here is a valid email: example@gmail.com')\n    .required('Email is required!'),\n  password: Yup.string()\n    .min(6, 'Must contain minimum 6 symbols!')\n    .max(32, 'Too Long! 32 symbols - is maximum.')\n    .required('Password is required!'),\n});\n\nexport default signUpSchema;\n","import { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Svg from 'components/Svg/Svg';\r\nimport Button from 'components/Buttons/Button';\r\nimport signUpSchema from 'schema/signUpSchema';\r\nimport styles from './SignUpForm.module.scss';\r\nimport { registrationUser } from 'redux/auth/authOperations';\r\n\r\nconst SignUpForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const initialValues = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\r\n    dispatch(registrationUser({ name, email, password }));\r\n    resetForm();\r\n  };\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={signUpSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {formik => (\r\n          <Form className={styles.form}>\r\n            <div className={styles.formWrapper}>\r\n              <div\r\n                className={`${styles.fieldWrapper} ${\r\n                  formik.touched.name && formik.errors.name\r\n                    ? `${styles.error}`\r\n                    : formik.touched.name && !formik.errors.name\r\n                    ? `${styles.success}`\r\n                    : ''\r\n                }`}\r\n              >\r\n                <Field\r\n                  className={styles.field}\r\n                  type=\"name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                />\r\n                <div className={styles.messageWrapper}>\r\n                  <Svg\r\n                    data-status=\"error\"\r\n                    className={styles.svgError}\r\n                    iconId={'icon-error'}\r\n                  />\r\n\r\n                  <ErrorMessage\r\n                    className={styles.errorMessage}\r\n                    name=\"name\"\r\n                    component=\"div\"\r\n                  />\r\n                </div>\r\n\r\n                {formik.touched.name && !formik.errors.name && (\r\n                  <div className={styles.messageWrapper}>\r\n                    <Svg\r\n                      data-status=\"success\"\r\n                      className={styles.svgSuccess}\r\n                      iconId={'icon-success'}\r\n                    />\r\n                    <div className={styles.successMessage}>Success name</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div\r\n                className={`${styles.fieldWrapper} ${\r\n                  formik.touched.email && formik.errors.email\r\n                    ? `${styles.error}`\r\n                    : formik.touched.email && !formik.errors.email\r\n                    ? `${styles.success}`\r\n                    : ''\r\n                }`}\r\n              >\r\n                <Field\r\n                  className={styles.field}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <div className={styles.messageWrapper}>\r\n                  <Svg\r\n                    data-status=\"error\"\r\n                    className={styles.svgError}\r\n                    iconId={'icon-error'}\r\n                  />\r\n\r\n                  <ErrorMessage\r\n                    className={styles.errorMessage}\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                  />\r\n                </div>\r\n\r\n                {formik.touched.email && !formik.errors.email && (\r\n                  <div className={styles.messageWrapper}>\r\n                    <Svg\r\n                      data-status=\"success\"\r\n                      className={styles.svgSuccess}\r\n                      iconId={'icon-success'}\r\n                    />\r\n                    <div className={styles.successMessage}>Success email</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div\r\n                className={`${styles.fieldWrapper} ${\r\n                  formik.touched.password && formik.errors.password\r\n                    ? `${styles.error}`\r\n                    : formik.touched.password && !formik.errors.password\r\n                    ? `${styles.success}`\r\n                    : ''\r\n                }`}\r\n              >\r\n                <Field\r\n                  className={styles.field}\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n\r\n                <div className={styles.messageWrapper}>\r\n                  <Svg\r\n                    data-status=\"error\"\r\n                    className={styles.svgError}\r\n                    iconId={'icon-error'}\r\n                  />\r\n\r\n                  <ErrorMessage\r\n                    className={styles.errorMessage}\r\n                    name=\"password\"\r\n                    component=\"div\"\r\n                  />\r\n                </div>\r\n\r\n                {formik.touched.password && !formik.errors.password && (\r\n                  <div className={styles.messageWrapper}>\r\n                    <Svg\r\n                      data-status=\"success\"\r\n                      className={styles.svgSuccess}\r\n                      iconId={'icon-success'}\r\n                    />\r\n                    <div className={styles.successMessage}>\r\n                      Success password\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <button\r\n                  className={styles.buttonEye}\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? (\r\n                    <Svg className={styles.svgEye} iconId={'icon-eye'} />\r\n                  ) : (\r\n                    <Svg className={styles.svgEye} iconId={'icon-eye-off'} />\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <Button type=\"submit\" text=\"Sign Up\" className={styles.button} />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport Container from 'components/Container/Container';\r\nimport SectionUserGateway from 'components/SectionUserGateway/SectionUserGateway';\r\nimport HomeBG from 'components/HomeBG/HomeBG';\r\nimport SignUpForm from 'components/SignUpForm/SignUpForm';\r\nimport Title from 'components/Title/Title';\r\nimport { SIGN_IN_ROUTE } from 'routes/constants';\r\n\r\nimport style from '../../components/HomeBG/HomeBG.module.scss';\r\nimport styles from './SignUpPage.module.scss';\r\n\r\nconst SignUpPage = () => {\r\n  return (\r\n    <Container>\r\n      <SectionUserGateway>\r\n        <div>\r\n          <div className={styles.wrapperTitle}>\r\n            <Title text=\"Sign Up\" className={styles.title} />\r\n            <p className={styles.text}>\r\n              Thank you for your interest in our platform. To complete the\r\n              registration process, please provide us with the following\r\n              information.\r\n            </p>\r\n          </div>\r\n\r\n          <SignUpForm />\r\n          <div className={styles.textWrapper}>\r\n            <p className={styles.textHint}>Already have account? </p>\r\n            <Link className={styles.textLink} to={SIGN_IN_ROUTE}>\r\n              Sign In\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <HomeBG className={style.auth}>\r\n          <div></div>\r\n        </HomeBG>\r\n      </SectionUserGateway>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignUpForm_form__CGOfo\",\"formWrapper\":\"SignUpForm_formWrapper__IUMSk\",\"fieldWrapper\":\"SignUpForm_fieldWrapper__GDU0i\",\"error\":\"SignUpForm_error__YZ0dN\",\"success\":\"SignUpForm_success__fasOJ\",\"svgError\":\"SignUpForm_svgError__luZjn\",\"field\":\"SignUpForm_field__JbRwK\",\"messageWrapper\":\"SignUpForm_messageWrapper__Xb+yB\",\"svgSuccess\":\"SignUpForm_svgSuccess__HWjAm\",\"errorMessage\":\"SignUpForm_errorMessage__-LhBb\",\"successMessage\":\"SignUpForm_successMessage__6py5I\",\"buttonEye\":\"SignUpForm_buttonEye__r-Qpc\",\"svgEye\":\"SignUpForm_svgEye__NaKlJ\",\"button\":\"SignUpForm_button__Zna-C\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapperTitle\":\"SignUpPage_wrapperTitle__yH+iR\",\"title\":\"SignUpPage_title__jeE8g\",\"text\":\"SignUpPage_text__hZwhQ\",\"textWrapper\":\"SignUpPage_textWrapper__N1Qto\",\"textHint\":\"SignUpPage_textHint__rH3Zo\",\"textLink\":\"SignUpPage_textLink__wBuPq\"};"],"names":["_ref","text","className","disabled","type","onClick","_jsx","children","titleClass","concat","styles","Yup","shape","name","min","max","required","email","password","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_Fragment","Formik","initialValues","validationSchema","signUpSchema","onSubmit","_ref2","resetForm","registrationUser","formik","_jsxs","Form","touched","errors","Field","placeholder","Svg","iconId","ErrorMessage","component","Button","Container","SectionUserGateway","Title","SignUpForm","Link","to","SIGN_IN_ROUTE","HomeBG","style"],"sourceRoot":""}