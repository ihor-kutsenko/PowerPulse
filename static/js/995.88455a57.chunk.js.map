{"version":3,"file":"static/js/995.88455a57.chunk.js","mappings":"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","sources":["components/Buttons/Button.jsx","webpack://react-homework-template/./src/components/ModalWindows/BasicModalWindow/BasicModalWindow.module.scss?568b","components/ModalWindows/BasicModalWindow/BasicModalWindow.jsx","webpack://react-homework-template/./src/components/Section/Section.module.scss?893f","components/Section/Section.jsx","webpack://react-homework-template/./src/components/Title/Title.module.scss?ae23","components/Title/Title.jsx","webpack://react-homework-template/./src/components/UserForm/ErrorMessages/ErrorMessages.module.scss?e266","components/UserForm/ErrorMessages/ErrorMessages.jsx","redux/products/productsSelectors.js","hooks/useProduct.js","webpack://react-homework-template/./src/components/Products/ProductsFilters/ProductsFilters.module.scss?d5ad","components/Products/ProductsFilters/ProductsFilters.jsx","schema/addProductInputSchema.js","webpack://react-homework-template/./src/components/ModalWindows/AddProduct/AddProduct.module.scss?06c5","components/ModalWindows/AddProduct/AddProduct.jsx","webpack://react-homework-template/./src/components/ModalWindows/AddProductSuccess/AddProductSuccess.module.scss?6ffe","components/ModalWindows/AddProductSuccess/AddProductSuccess.jsx","components/Products/ProductsItem/ProductsItem.jsx","webpack://react-homework-template/./src/components/Products/ProductsNotFound/ProductsNotFound.module.scss?25e7","components/Products/ProductsNotFound/ProductsNotFound.jsx","components/Products/ProductsList/ProductsList.jsx","webpack://react-homework-template/./src/components/Products/Products.module.scss?4626","components/Products/Products.jsx","pages/ProductsPage/ProductsPage.jsx","utils/capitalizedWord.js","utils/formatDate.js","webpack://react-homework-template/./src/components/Exercises/ExercisesItem/ExercisesItem.module.scss?a07e","webpack://react-homework-template/./src/components/Exercises/ExercisesList/ExerciseList.module.scss?e3d1"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ text, className, disabled, type, onClick }) => {\r\n  return (\r\n    <button\r\n      className={className}\r\n      disabled={disabled}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  type: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"BasicModalWindow_overlay__cp9tO\",\"modal_wrapper\":\"BasicModalWindow_modal_wrapper__La1IP\",\"btn_close\":\"BasicModalWindow_btn_close__vCDpE\",\"icon_close\":\"BasicModalWindow_icon_close__ADrBu\"};","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport Svg from 'components/Svg/Svg';\r\nimport styles from './BasicModalWindow.module.scss';\r\n\r\nconst modalRoot = document.querySelector('#root-modal');\r\n\r\nconst BasicModalWindow = ({ children, handleModalToggle }) => {\r\n  useEffect(() => {\r\n    const handleKeyDown = event => {\r\n      if (event.code === 'Escape') {\r\n        handleModalToggle();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [handleModalToggle]);\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      handleModalToggle();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={styles.overlay} onClick={handleBackdropClick}>\r\n      <div className={styles.modal_wrapper}>\r\n        <button className={styles.btn_close} onClick={handleModalToggle}>\r\n          <Svg iconId={'icon-close'} className={styles.icon_close} />\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default BasicModalWindow;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__0XkUm\"};","import styles from './Section.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children }) => {\r\n  return <div className={styles.section}>{children}</div>;\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__IlEm8\"};","import PropTypes from 'prop-types';\nimport styles from './Title.module.scss';\n\nconst Title = ({ text, className }) => {\n  const titleClass = `${styles.title} ${className || ''}`;\n\n  return <h2 className={titleClass}>{text}</h2>;\n};\n\nexport default Title;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"ErrorMessages_errorMessage__6nAso\"};","import { ErrorMessage } from 'formik';\r\nimport styles from './ErrorMessages.module.scss';\r\n\r\nconst ErrorMessages = ({ nameField }) => {\r\n  return (\r\n    <>\r\n      <ErrorMessage\r\n        className={styles.errorMessage}\r\n        name={nameField}\r\n        component=\"div\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessages;\r\n","export const selectProducts = state => state.products.items;\r\nexport const selectProductsCategory = state => state.products.category;\r\nexport const selectProductsFilters = state => state.products.filters;\r\nexport const selectProductsGetMore = state => state.products.getMore;\r\nexport const selectProductsIsLoading = state => state.products.isLoading;\r\nexport const selectProductsError = state => state.products.error;\r\n","import { useSelector } from 'react-redux';\r\nimport {\r\n  selectProducts,\r\n  selectProductsCategory,\r\n  selectProductsError,\r\n  selectProductsFilters,\r\n  selectProductsGetMore,\r\n  selectProductsIsLoading,\r\n} from 'redux/products/productsSelectors';\r\n\r\nconst useProduct = () => {\r\n  const products = useSelector(selectProducts);\r\n  const category = useSelector(selectProductsCategory);\r\n  const filters = useSelector(selectProductsFilters);\r\n  const productsGetMore = useSelector(selectProductsGetMore);\r\n  const productsIsLoading = useSelector(selectProductsIsLoading);\r\n  const productsError = useSelector(selectProductsError);\r\n\r\n  return {\r\n    products,\r\n    category,\r\n    filters,\r\n    productsGetMore,\r\n    productsIsLoading,\r\n    productsError,\r\n  };\r\n};\r\n\r\nexport default useProduct;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"ProductsFilters_filterForm__Fjk1b\",\"filterForm_SearchWrapper\":\"ProductsFilters_filterForm_SearchWrapper__2lDrS\",\"filterForm_SearchField\":\"ProductsFilters_filterForm_SearchField__uSysG\",\"filterForm_btnSearch\":\"ProductsFilters_filterForm_btnSearch__LN4+Z\",\"filterForm_btnCancel\":\"ProductsFilters_filterForm_btnCancel__vr-iK\",\"filterForm_iconSearch\":\"ProductsFilters_filterForm_iconSearch__xYcu4\",\"filterForm_iconCancel\":\"ProductsFilters_filterForm_iconCancel__97VVG\",\"filterForm_SelectWrapper\":\"ProductsFilters_filterForm_SelectWrapper__c6LSR\",\"filterForm_selectCategory\":\"ProductsFilters_filterForm_selectCategory__Z2EuY\",\"filterForm_selectRecommended\":\"ProductsFilters_filterForm_selectRecommended__9nfY3\"};","import { useFormik } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport Svg from 'components/Svg/Svg';\r\n\r\nimport useProduct from 'hooks/useProduct';\r\nimport { fetchProductsCategories } from 'redux/products/productsOperations';\r\nimport { setFilters, setItems } from 'redux/products/productsSlice';\r\n\r\nimport styles from './ProductsFilters.module.scss';\r\n\r\nconst ProductsFilters = () => {\r\n  const dispatch = useDispatch();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const { category, filters } = useProduct();\r\n\r\n  const params = useMemo(\r\n    () => Object.fromEntries([...searchParams]),\r\n    [searchParams]\r\n  );\r\n\r\n  const isEmptyFilters =\r\n    filters.search !== '' ||\r\n    filters.category !== '' ||\r\n    filters.recommended !== '';\r\n\r\n  const isEmptyParams = Object.keys(params).length === 0;\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      search: params.search || filters.search,\r\n      category: params.category || filters.category,\r\n      recommended: params.recommended || filters.recommended,\r\n    },\r\n    onSubmit: values => handleSubmit(values),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isEmptyParams && isEmptyFilters) {\r\n      setSearchParams({\r\n        search: filters.search,\r\n        category: filters.category,\r\n        recommended: filters.recommended,\r\n      });\r\n    }\r\n    dispatch(fetchProductsCategories());\r\n  }, [\r\n    dispatch,\r\n    isEmptyFilters,\r\n    isEmptyParams,\r\n    filters.search,\r\n    filters.category,\r\n    filters.recommended,\r\n    setSearchParams,\r\n  ]);\r\n\r\n  const handleSubmit = paramsSearch => {\r\n    setSearchParams(paramsSearch);\r\n    dispatch(setItems());\r\n    dispatch(setFilters({ page: 1, ...paramsSearch }));\r\n  };\r\n\r\n  const handleChange = e => {\r\n    formik.handleChange(e);\r\n    const { initialValues, values } = formik;\r\n    if (e.target.value !== initialValues[e.target.value]) {\r\n      const paramsSearch = { ...values, [e.target.name]: e.target.value };\r\n      handleSubmit(paramsSearch);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.filterForm} onSubmit={formik.handleSubmit}>\r\n        <div className={styles.filterForm_SearchWrapper}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            placeholder=\"Search\"\r\n            className={styles.filterForm_SearchField}\r\n            value={formik.values.search}\r\n            onChange={formik.handleChange}\r\n          />\r\n          <button className={styles.filterForm_btnSearch} type=\"submit\">\r\n            <Svg\r\n              iconId={'icon-Search'}\r\n              className={styles.filterForm_iconSearch}\r\n            />\r\n          </button>\r\n\r\n          {formik.values.search !== '' && (\r\n            <button\r\n              className={styles.filterForm_btnCancel}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                formik.setFieldValue('search', '');\r\n                formik.handleSubmit();\r\n              }}\r\n            >\r\n              <Svg\r\n                iconId={'icon-close'}\r\n                className={styles.filterForm_iconCancel}\r\n              />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className={styles.filterForm_SelectWrapper}>\r\n          <select\r\n            name=\"category\"\r\n            className={styles.filterForm_selectCategory}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Categories</option>\r\n            {category.map(category => (\r\n              <option key={category} value={category}>\r\n                {category}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            name=\"recommended\"\r\n            className={styles.filterForm_selectRecommended}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">All</option>\r\n            <option value={true}>Recommended</option>\r\n            <option value={false}>Not recommended</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsFilters;\r\n","import * as Yup from 'yup';\r\n\r\nconst AddProductInputSchema = Yup.object().shape({\r\n  amount: Yup.number()\r\n    .positive('Amount must be a positive number')\r\n    .required('Amount is required'),\r\n});\r\n\r\nexport default AddProductInputSchema;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddProduct_container__u9p90\",\"input_container\":\"AddProduct_input_container__TFyaa\",\"input__gramsWrapper\":\"AddProduct_input__gramsWrapper__lOz-e\",\"error\":\"AddProduct_error__-3P3L\",\"success\":\"AddProduct_success__d-knL\",\"input_product\":\"AddProduct_input_product__a166n\",\"input_grams\":\"AddProduct_input_grams__DYFkD\",\"text\":\"AddProduct_text__xCUEZ\",\"text_value\":\"AddProduct_text_value__8V3XY\",\"btn_wrapper\":\"AddProduct_btn_wrapper__mDTdg\",\"btn_add\":\"AddProduct_btn_add__gqFcw\",\"btn_cancel\":\"AddProduct_btn_cancel__dlKVt\"};","import { Formik, Form, Field } from 'formik';\r\n\r\nimport AddProductInputSchema from 'schema/addProductInputSchema';\r\nimport ErrorMessages from 'components/UserForm/ErrorMessages/ErrorMessages';\r\n\r\nimport capitalizedWord from 'utils/capitalizedWord';\r\nimport formatDate from 'utils/formatDate';\r\nimport styles from './AddProduct.module.scss';\r\n\r\nconst AddProduct = ({\r\n  product,\r\n  handleModalProduct,\r\n  handleModalSuccess,\r\n  handleSelectedProduct,\r\n}) => {\r\n  const initialValues = {\r\n    amount: '',\r\n  };\r\n\r\n  const calculateCalories = amount =>\r\n    Math.round((amount * product.calories) / 100);\r\n\r\n  const formattedDate = formatDate(new Date());\r\n\r\n  const handleAddToDiary = values => {\r\n    const productToDiary = {\r\n      date: formattedDate,\r\n      product: product._id,\r\n      amount: values.amount,\r\n      calories: calculateCalories(values.amount),\r\n    };\r\n    handleModalProduct();\r\n    handleModalSuccess();\r\n    handleSelectedProduct(productToDiary);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={AddProductInputSchema}\r\n        onSubmit={handleAddToDiary}\r\n      >\r\n        {formik => (\r\n          <Form>\r\n            <div className={styles.input_container}>\r\n              <label htmlFor=\"title\">\r\n                <Field\r\n                  className={styles.input_product}\r\n                  id=\"title\"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={capitalizedWord(product.title)}\r\n                  disabled\r\n                />\r\n              </label>\r\n\r\n              <div\r\n                className={`${styles.input__gramsWrapper} ${\r\n                  formik.errors.amount\r\n                    ? `${styles.error}`\r\n                    : !formik.errors.amount\r\n                    ? `${styles.success}`\r\n                    : ''\r\n                }`}\r\n              >\r\n                <Field\r\n                  className={styles.input_grams}\r\n                  id=\"title\"\r\n                  type=\"text\"\r\n                  name=\"amount\"\r\n                  placeholder=\"grams\"\r\n                  autoFocus\r\n                />\r\n                <ErrorMessages nameField=\"amount\" component=\"div\" />\r\n              </div>\r\n            </div>\r\n\r\n            <p className={styles.text}>\r\n              Calories:{' '}\r\n              <span className={styles.text_value}>\r\n                <Field name=\"amount\">\r\n                  {({ field }) => calculateCalories(field.value)}\r\n                </Field>\r\n              </span>\r\n            </p>\r\n\r\n            <div className={styles.btn_wrapper}>\r\n              <button\r\n                className={styles.btn_add}\r\n                type=\"submit\"\r\n                disabled={!formik.isValid}\r\n              >\r\n                {' '}\r\n                Add to diary\r\n              </button>\r\n              <button\r\n                className={styles.btn_cancel}\r\n                type=\"button\"\r\n                onClick={handleModalProduct}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddProductSuccess_container__bj4AL\",\"wrapper\":\"AddProductSuccess_wrapper__5IHaN\",\"img_wrapper\":\"AddProductSuccess_img_wrapper__cSWCn\",\"img\":\"AddProductSuccess_img__4txf8\",\"title\":\"AddProductSuccess_title__13vRS\",\"text\":\"AddProductSuccess_text__hBKJS\",\"span\":\"AddProductSuccess_span__EVUiN\",\"btn_next\":\"AddProductSuccess_btn_next__tuhGP\",\"icon_right\":\"AddProductSuccess_icon_right__At-07\",\"link_wrapper\":\"AddProductSuccess_link_wrapper__2OgCG\"};","import { Link } from 'react-router-dom';\r\nimport Button from 'components/Buttons/Button';\r\nimport Svg from 'components/Svg/Svg';\r\nimport mango from '../../../images/mango.png';\r\n\r\nimport { DIARY_ROUTE } from 'routes/constants';\r\nimport styles from './AddProductSuccess.module.scss';\r\n\r\nconst AddProductSuccess = ({ handleModalSuccess, selectedProduct }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.img_wrapper}>\r\n          <img src={mango} alt=\"Mango\" className={styles.img} />\r\n          <p className={styles.title}>Well done</p>\r\n\r\n          <p className={styles.text}>\r\n            Calories:\r\n            <span className={styles.span}>{selectedProduct.calories}</span>\r\n          </p>\r\n        </div>\r\n\r\n        <Button\r\n          text=\"Next product\"\r\n          type=\"button\"\r\n          className={styles.btn_next}\r\n          onClick={handleModalSuccess}\r\n        />\r\n\r\n        <Link to={DIARY_ROUTE} onClick={handleModalSuccess}>\r\n          <div className={styles.link_wrapper}>\r\n            <p className={styles.text}>\r\n              To the diary\r\n              <Svg iconId={'icon-arrow-right'} className={styles.icon_right} />\r\n            </p>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductSuccess;\r\n","import { forwardRef, useState } from 'react';\r\n\r\nimport Svg from 'components/Svg/Svg';\r\nimport BasicModalWindow from 'components/ModalWindows/BasicModalWindow/BasicModalWindow';\r\nimport AddProduct from 'components/ModalWindows/AddProduct/AddProduct';\r\nimport AddProductSuccess from 'components/ModalWindows/AddProductSuccess/AddProductSuccess';\r\n\r\nimport useAuth from 'hooks/useAuth';\r\n\r\nimport styles from '../../Exercises/ExercisesItem/ExercisesItem.module.scss';\r\n\r\nconst ProductsItem = forwardRef(({ product }, ref) => {\r\n  const [modalSuccess, setModalSuccess] = useState(false);\r\n  const [modalProduct, setModalProduct] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n\r\n  const {\r\n    user: {\r\n      profileSettings: { blood },\r\n    },\r\n  } = useAuth();\r\n\r\n  const handleModalProduct = () => setModalProduct(!modalProduct);\r\n  const handleModalSuccess = () => setModalSuccess(!modalSuccess);\r\n\r\n  const handleSelectedProduct = data => {\r\n    setSelectedProduct(data);\r\n  };\r\n\r\n  const isRecommended = product.groupBloodNotAllowed[blood];\r\n\r\n  return (\r\n    <div className={styles.exercisesItem_wrapper} ref={ref}>\r\n      <div className={styles.exercisesItem_topWrapper}>\r\n        <p className={styles.exercisesItem_text}>diet</p>\r\n        {isRecommended ? (\r\n          <div className={styles.productRecommended}>\r\n            <p className={styles.productRecommendedTrue}></p>\r\n            <p>Recommended</p>\r\n          </div>\r\n        ) : (\r\n          <div className={styles.productRecommended}>\r\n            <p className={styles.productRecommendedFalse}></p>\r\n            <p>Not recommended</p>\r\n          </div>\r\n        )}\r\n        <button\r\n          className={styles.exercisesItem_btnStart}\r\n          onClick={() => {\r\n            handleModalProduct();\r\n          }}\r\n        >\r\n          Add\r\n          <Svg\r\n            iconId={'icon-arrow-right'}\r\n            className={styles.exercisesItem_iconArrowRight}\r\n          />\r\n        </button>\r\n      </div>\r\n\r\n      <div className={styles.exercisesItem_nameWrapper}>\r\n        <Svg iconId={'icon-run'} className={styles.exercisesItem_iconRun} />\r\n        <h3 className={styles.exercisesItem_title}>{product.title}</h3>\r\n      </div>\r\n      <ul className={styles.exercisesItem_bottomList}>\r\n        <li className={styles.exercisesItem_item}>\r\n          Calories:\r\n          <span className={styles.exercisesItem_itemText}>\r\n            {product.calories}\r\n          </span>\r\n        </li>\r\n        <li className={styles.exercisesItem_item}>\r\n          Category:\r\n          <span className={styles.exercisesItem_itemText}>\r\n            {product.category}\r\n          </span>\r\n        </li>\r\n        <li className={styles.exercisesItem_item}>\r\n          Weight:\r\n          <span className={styles.exercisesItem_itemText}>\r\n            {product.weight}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n\r\n      {modalProduct && (\r\n        <BasicModalWindow handleModalToggle={handleModalProduct}>\r\n          <AddProduct\r\n            product={product}\r\n            handleModalProduct={handleModalProduct}\r\n            handleModalSuccess={handleModalSuccess}\r\n            handleSelectedProduct={handleSelectedProduct}\r\n          />\r\n        </BasicModalWindow>\r\n      )}\r\n      {modalSuccess && (\r\n        <BasicModalWindow handleModalToggle={handleModalSuccess}>\r\n          <AddProductSuccess\r\n            handleModalSuccess={handleModalSuccess}\r\n            selectedProduct={selectedProduct}\r\n          />\r\n        </BasicModalWindow>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProductsItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ProductsNotFound_wrapper__H9+7J\",\"text\":\"ProductsNotFound_text__YAVMi\",\"warningText\":\"ProductsNotFound_warningText__ECvka\"};","import styles from './ProductsNotFound.module.scss';\r\n\r\nconst ProductsNotFound = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper}>\r\n        <p className={styles.text}>\r\n          <span className={styles.warningText}>\r\n            Sorry, no results were found{' '}\r\n          </span>\r\n          for the product filters you selected. You may want to consider other\r\n          search options to find the product you want. Our range is wide and you\r\n          have the opportunity to find more options that suit your needs.\r\n        </p>\r\n        <p className={styles.text}>\r\n          <span className={styles.warningText}>\r\n            Try changing the search parameters.\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsNotFound;\r\n","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport ProductsItem from '../ProductsItem/ProductsItem';\r\nimport ProductsNotFound from '../ProductsNotFound/ProductsNotFound';\r\nimport bg from '../../../images/products-list-bg.jpg';\r\n\r\nimport useProduct from 'hooks/useProduct';\r\nimport { setFilters, setItems } from 'redux/products/productsSlice';\r\nimport { fetchProducts } from 'redux/products/productsOperations';\r\n\r\nimport styles from '../../Exercises/ExercisesList//ExerciseList.module.scss';\r\n\r\nconst ProductsList = () => {\r\n  const dispatch = useDispatch();\r\n  const [searchParams] = useSearchParams();\r\n  const observer = useRef();\r\n\r\n  const { products, filters, productsGetMore } = useProduct();\r\n\r\n  const params = useMemo(\r\n    () => Object.fromEntries([...searchParams]),\r\n    [searchParams]\r\n  );\r\n\r\n  const isEmptyParams =\r\n    Object.keys(params).length > 0 &&\r\n    (params.search !== filters.search ||\r\n      params.category !== filters.category ||\r\n      params.recommended !== filters.recommended);\r\n\r\n  const lastElementRef = useCallback(\r\n    node => {\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver(entries => {\r\n        if (entries[0].isIntersecting && productsGetMore) {\r\n          let currentPage = filters.page + 1;\r\n          dispatch(setFilters({ page: currentPage }));\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [productsGetMore, dispatch, filters.page]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const filterParams = filters;\r\n    if (isEmptyParams) {\r\n      dispatch(setFilters({ ...params }));\r\n    }\r\n\r\n    dispatch(fetchProducts({ filterParams }));\r\n  }, [dispatch, filters, params, isEmptyParams]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setItems());\r\n      dispatch(setFilters({ page: 1 }));\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.list}>\r\n        <div className={styles.exercise_container}>\r\n          {products.length === 0 && <ProductsNotFound />}\r\n          {products.map((product, index) => (\r\n            <ProductsItem\r\n              key={`${product._id}-${index}`}\r\n              product={product}\r\n              ref={lastElementRef}\r\n            />\r\n          ))}\r\n        </div>\r\n        <img src={bg} alt=\"imag\" className={styles.img_bgProducts} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper_products\":\"Products_wrapper_products__+JUbc\"};","import Title from 'components/Title/Title';\r\nimport ProductsFilters from './ProductsFilters/ProductsFilters';\r\nimport ProductsList from './ProductsList/ProductsList';\r\n\r\nimport styles from './Products.module.scss';\r\n\r\nconst Products = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper_products}>\r\n        <Title text=\"Products\" className={styles.title} />\r\n        <ProductsFilters />\r\n      </div>\r\n      <ProductsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import Container from 'components/Container/Container';\r\nimport Section from 'components/Section/Section';\r\nimport Products from 'components/Products/Products';\r\n\r\nconst ProductsPage = () => {\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        <Products />\r\n      </Section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n","const capitalizedWord = string => {\r\n  const newString = string.slice(0, 1).toUpperCase() + string.slice(1);\r\n  return newString;\r\n};\r\n\r\nexport default capitalizedWord;\r\n","const formatDate = date => {\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const year = date.getFullYear();\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nexport default formatDate;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"exercisesItem_wrapper\":\"ExercisesItem_exercisesItem_wrapper__9tI51\",\"exercisesItem_topWrapper\":\"ExercisesItem_exercisesItem_topWrapper__bQS1A\",\"exercisesItem_text\":\"ExercisesItem_exercisesItem_text__MRQIi\",\"exercisesItem_btnStart\":\"ExercisesItem_exercisesItem_btnStart__SvGPV\",\"exercisesItem_iconArrowRight\":\"ExercisesItem_exercisesItem_iconArrowRight__pcf0G\",\"exercisesItem_nameWrapper\":\"ExercisesItem_exercisesItem_nameWrapper__A6gsI\",\"exercisesItem_iconRun\":\"ExercisesItem_exercisesItem_iconRun__as+U3\",\"exercisesItem_title\":\"ExercisesItem_exercisesItem_title__zov1a\",\"exercisesItem_bottomList\":\"ExercisesItem_exercisesItem_bottomList__eYrW1\",\"exercisesItem_item\":\"ExercisesItem_exercisesItem_item__tyTTn\",\"exercisesItem_itemText\":\"ExercisesItem_exercisesItem_itemText__uAydW\",\"productRecommended\":\"ExercisesItem_productRecommended__COHlQ\",\"productRecommendedTrue\":\"ExercisesItem_productRecommendedTrue__XMKfw\",\"productRecommendedFalse\":\"ExercisesItem_productRecommendedFalse__-wl2E\"};","// extracted by mini-css-extract-plugin\nexport default {\"exercise_container\":\"ExerciseList_exercise_container__8E+XZ\",\"img_bg\":\"ExerciseList_img_bg__zqTJy\",\"img_bgProducts\":\"ExerciseList_img_bgProducts__52HZk\"};"],"names":["_ref","text","className","disabled","type","onClick","_jsx","children","modalRoot","document","querySelector","handleModalToggle","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","styles","currentTarget","target","_jsxs","Svg","iconId","titleClass","concat","nameField","_Fragment","ErrorMessage","name","component","selectProducts","state","products","items","selectProductsCategory","category","selectProductsFilters","filters","selectProductsGetMore","getMore","selectProductsIsLoading","isLoading","selectProductsError","error","useSelector","productsGetMore","productsIsLoading","productsError","dispatch","useDispatch","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useProduct","useProduct","params","useMemo","Object","fromEntries","_toConsumableArray","isEmptyFilters","search","recommended","isEmptyParams","keys","length","formik","useFormik","initialValues","onSubmit","values","handleSubmit","fetchProductsCategories","paramsSearch","setItems","setFilters","_objectSpread","page","handleChange","e","value","_defineProperty","placeholder","onChange","setFieldValue","map","Yup","shape","amount","positive","required","product","handleModalProduct","handleModalSuccess","handleSelectedProduct","calculateCalories","Math","round","calories","formattedDate","formatDate","Date","Formik","validationSchema","AddProductInputSchema","productToDiary","date","_id","Form","htmlFor","Field","id","capitalizedWord","title","errors","autoFocus","ErrorMessages","_ref2","field","isValid","selectedProduct","src","mango","alt","Button","Link","to","DIARY_ROUTE","forwardRef","ref","_useState","useState","_useState2","modalSuccess","setModalSuccess","_useState3","_useState4","modalProduct","setModalProduct","_useState5","_useState6","setSelectedProduct","blood","useAuth","user","profileSettings","isRecommended","groupBloodNotAllowed","weight","BasicModalWindow","AddProduct","data","AddProductSuccess","observer","useRef","lastElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","currentPage","observe","filterParams","fetchProducts","ProductsNotFound","index","ProductsItem","bg","Title","ProductsFilters","ProductsList","Container","Section","Products","string","slice","toUpperCase","day","String","getDate","padStart","month","getMonth","year","getFullYear"],"sourceRoot":""}