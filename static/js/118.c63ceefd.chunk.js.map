{"version":3,"file":"static/js/118.c63ceefd.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.scss?893f","components/Section/Section.jsx","webpack://react-homework-template/./src/components/StatisticsCard/StatisticsCard.module.scss?691a","components/StatisticsCard/StatisticsCard.jsx","webpack://react-homework-template/./src/components/Title/Title.module.scss?ae23","components/Title/Title.jsx","webpack://react-homework-template/./src/components/Diary/DayDashboard/DayDashboard.module.scss?adf0","components/Diary/DayDashboard/DayDashboard.jsx","webpack://react-homework-template/./src/components/Buttons/AddItemDiaryBtn/AddItemDiaryBtn.module.scss?4ed8","components/Buttons/AddItemDiaryBtn/AddItemDiaryBtn.jsx","webpack://react-homework-template/./src/components/Diary/EmptyList/EmptyList.module.scss?bd78","components/Diary/EmptyList/EmptyList.jsx","../node_modules/nanoid/url-alphabet/index.js","webpack://react-homework-template/./src/components/Diary/ProductsTable/ProductsTable.module.scss?cb86","components/Diary/ProductsTable/ProductsTable.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Diary/DayProducts/DayProducts.module.scss?1d9c","components/Diary/DayProducts/DayProducts.jsx","components/Diary/DayExercises/DayExercises.jsx","webpack://react-homework-template/./src/components/Diary/Diary.module.scss?6324","components/Diary/Diary.jsx","pages/DiaryPage/DiaryPage.jsx","utils/capitalizedWord.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__0XkUm\"};","import styles from './Section.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children }) => {\r\n  return <div className={styles.section}>{children}</div>;\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"statistics__wrapper\":\"StatisticsCard_statistics__wrapper__+UJLB\",\"statistics__titleWrapper\":\"StatisticsCard_statistics__titleWrapper__jsud-\",\"statistics__icon\":\"StatisticsCard_statistics__icon__bNpXs\",\"statistics__title\":\"StatisticsCard_statistics__title__gSTpp\",\"statistics____value\":\"StatisticsCard_statistics____value__uNSIA\",\"statisticsPrimaryItem\":\"StatisticsCard_statisticsPrimaryItem__rsYFp\",\"statisticsPrimaryTitle\":\"StatisticsCard_statisticsPrimaryTitle__mWDRn\",\"statisticItemPositive\":\"StatisticsCard_statisticItemPositive__oufnX\",\"statisticItemNegative\":\"StatisticsCard_statisticItemNegative__OkLEy\"};","import PropTypes from 'prop-types';\r\n\r\nimport Svg from 'components/Svg/Svg';\r\nimport styles from './StatisticsCard.module.scss';\r\n\r\nconst StatisticsCard = ({\r\n  statisticsName,\r\n  statisticsIcon,\r\n  statisticsValue,\r\n  statisticsPrimary,\r\n  fulfilledNorm = '',\r\n}) => {\r\n  const statClasses = [\r\n    styles.statistics__wrapper,\r\n    statisticsPrimary && styles.statisticsPrimaryItem,\r\n  ];\r\n\r\n  if (fulfilledNorm === 'positive') {\r\n    statClasses.push(styles.statisticItemPositive);\r\n  } else if (fulfilledNorm === 'negative') {\r\n    statClasses.push(styles.statisticItemNegative);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={statClasses.join(' ')}>\r\n        <div className={styles.statistics__titleWrapper}>\r\n          <Svg className={styles.statistics__icon} iconId={statisticsIcon} />\r\n          <p\r\n            className={`${styles.statistics__title} ${\r\n              statisticsPrimary && styles.statisticsPrimaryTitle\r\n            }`}\r\n          >\r\n            {statisticsName}\r\n          </p>\r\n        </div>\r\n        <div className={styles.statistics__value}>{statisticsValue}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatisticsCard;\r\n\r\nStatisticsCard.propTypes = {\r\n  statisticsName: PropTypes.string.isRequired,\r\n  statisticsIcon: PropTypes.string.isRequired,\r\n  statisticsValue: PropTypes.string.isRequired,\r\n  statisticsPrimary: PropTypes.bool,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__IlEm8\"};","import PropTypes from 'prop-types';\nimport styles from './Title.module.scss';\n\nconst Title = ({ text, className }) => {\n  const titleClass = `${styles.title} ${className || ''}`;\n\n  return <h2 className={titleClass}>{text}</h2>;\n};\n\nexport default Title;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dashboard_wrapper\":\"DayDashboard_dashboard_wrapper__6W+IM\",\"dashboard_list\":\"DayDashboard_dashboard_list__ZUAVD\",\"warning_wrapper\":\"DayDashboard_warning_wrapper__F0eky\",\"warning_icon\":\"DayDashboard_warning_icon__cgqqJ\",\"warning_text\":\"DayDashboard_warning_text__ByUKG\"};","import StatisticsCard from 'components/StatisticsCard/StatisticsCard';\r\nimport Svg from 'components/Svg/Svg';\r\n\r\nimport styles from './DayDashboard.module.scss';\r\n\r\nconst DayDashboard = () => {\r\n  let dailyCalorieIntake = 2200;\r\n  let dailyPhysicalActivity = 110;\r\n  let caloriesConsumed = 2300;\r\n  let caloriesBurned = 855;\r\n  let caloriesRemaining = dailyCalorieIntake - caloriesConsumed;\r\n  let sportsRemaining = 30;\r\n\r\n  const isCaloriesRemaining =\r\n    caloriesConsumed < dailyCalorieIntake ? `positive` : `negative`;\r\n  const isSportsRemaining = sportsRemaining > 0 ? `positive` : `negative`;\r\n\r\n  return (\r\n    <div className={styles.dashboard_wrapper}>\r\n      <ul className={styles.dashboard_list}>\r\n        <StatisticsCard\r\n          statisticsName={'Daily calorie intake'}\r\n          statisticsIcon={'icon-fluent-food'}\r\n          statisticsValue={`${dailyCalorieIntake}`}\r\n          statisticsPrimary={true}\r\n        />\r\n        <StatisticsCard\r\n          statisticsName={'Daily physical activity'}\r\n          statisticsIcon={'icon-dumbbell'}\r\n          statisticsValue={`${dailyPhysicalActivity} min`}\r\n          statisticsPrimary={true}\r\n        />\r\n        <StatisticsCard\r\n          statisticsName={'Calories consumed'}\r\n          statisticsIcon={'icon-apple'}\r\n          statisticsValue={`${caloriesConsumed}`}\r\n        />\r\n        <StatisticsCard\r\n          statisticsName={'Calories burned'}\r\n          statisticsIcon={'icon-calories'}\r\n          statisticsValue={`${caloriesBurned}`}\r\n        />\r\n        <StatisticsCard\r\n          statisticsName={'Calories remaining'}\r\n          statisticsIcon={'icon-bubble'}\r\n          statisticsValue={`${caloriesRemaining}`}\r\n          fulfilledNorm={isCaloriesRemaining}\r\n        />\r\n        <StatisticsCard\r\n          statisticsName={'Sports remaining'}\r\n          statisticsIcon={'icon-runner'}\r\n          statisticsValue={\r\n            isSportsRemaining === 'positive'\r\n              ? `+${sportsRemaining} min`\r\n              : `${sportsRemaining} min`\r\n          }\r\n          fulfilledNorm={isSportsRemaining}\r\n        />\r\n      </ul>\r\n      <div className={styles.warning_wrapper}>\r\n        <Svg iconId={'icon-warning'} className={styles.warning_icon} />\r\n        <p className={styles.warning_text}>\r\n          Record all your meals in a calorie diary every day. This will help me\r\n          be aware of my nutrition and make me responsible for my choices.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayDashboard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"add_link\":\"AddItemDiaryBtn_add_link__abf-C\",\"icon_right\":\"AddItemDiaryBtn_icon_right__e0L3A\"};","import { NavLink } from 'react-router-dom';\r\nimport Svg from 'components/Svg/Svg';\r\n\r\nimport styles from './AddItemDiaryBtn.module.scss';\r\n\r\nconst AddItemDiaryBtn = ({ titleLink, titleRoute }) => {\r\n  return (\r\n    <>\r\n      <NavLink className={styles.add_link} to={titleRoute}>\r\n        {titleLink}\r\n        <Svg className={styles.icon_right} iconId={'icon-arrow-right'} />\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddItemDiaryBtn;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"EmptyList_wrapper__mKeVv\",\"text\":\"EmptyList_text__gT5eN\"};","import styles from './EmptyList.module.scss';\r\n\r\nconst EmptyList = ({ listName }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <p className={styles.text}>Not found {listName}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyList;\r\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ProductsTable_list__6Ic6Q\",\"item\":\"ProductsTable_item__4bJoZ\",\"title\":\"ProductsTable_title__6wE9J\",\"element\":\"ProductsTable_element__ocxDE\",\"table\":\"ProductsTable_table__SsleE\",\"table_body\":\"ProductsTable_table_body__DZju2\",\"value\":\"ProductsTable_value__eaVm3\",\"title_trash\":\"ProductsTable_title_trash__PG9m7\",\"product_wrapper\":\"ProductsTable_product_wrapper__t72MC\",\"recommend_wrapper\":\"ProductsTable_recommend_wrapper__PJMnn\",\"recommend_yes\":\"ProductsTable_recommend_yes__E0Tf4\",\"recommend_not\":\"ProductsTable_recommend_not__QvAeI\",\"value_trash\":\"ProductsTable_value_trash__TOlpz\",\"icon_trash\":\"ProductsTable_icon_trash__2Ce63\"};","import { nanoid } from 'nanoid';\r\n\r\nimport Svg from 'components/Svg/Svg';\r\nimport capitalizedWord from 'utils/capitalizedWord';\r\nimport styles from './ProductsTable.module.scss';\r\n\r\nconst ProductsTable = ({ products }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {products.map(\r\n        ({ _id, title, category, calories, weight, groupBloodNotAllowed }) => {\r\n          const recommended = Object.values(groupBloodNotAllowed).some(\r\n            value => !value\r\n          );\r\n          return (\r\n            <li key={nanoid()} className={styles.item}>\r\n              <table className={styles.table}>\r\n                <tbody className={styles.table_body}>\r\n                  <tr className={styles.element}>\r\n                    <th className={styles.title}>Title</th>\r\n                    <td className={styles.value}>{capitalizedWord(title)}</td>\r\n                  </tr>\r\n                  <tr className={styles.element}>\r\n                    <th className={styles.title}>Category</th>\r\n                    <td className={styles.value}>\r\n                      {capitalizedWord(category)}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n                <tbody className={styles.product_wrapper}>\r\n                  <tr className={styles.element}>\r\n                    <th className={styles.title}>Calories</th>\r\n                    <td className={styles.value}>{calories}</td>\r\n                  </tr>\r\n                  <tr className={styles.element}>\r\n                    <th className={styles.title}>Weight</th>\r\n                    <td className={styles.value}>{weight}</td>\r\n                  </tr>\r\n                  <tr className={styles.element}>\r\n                    <th className={styles.title}>Recommend</th>\r\n                    <td className={styles.value}>\r\n                      <div className={styles.recommend_wrapper}>\r\n                        <span\r\n                          className={\r\n                            recommended\r\n                              ? `${styles.recommend_yes}`\r\n                              : `${styles.recommend_not}`\r\n                          }\r\n                        ></span>\r\n                        {recommended ? 'Yes' : 'No'}\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr className={styles.element}>\r\n                    <th className={`${styles.title} ${styles.title_trash}`}>\r\n                      Trash\r\n                    </th>\r\n                    <td className={styles.value_trash}>\r\n                      <Svg\r\n                        className={styles.icon_trash}\r\n                        iconId={'icon-trash'}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </li>\r\n          );\r\n        }\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ProductsTable;\r\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DayProducts_container__kRZ31\",\"container_scroll\":\"DayProducts_container_scroll__g4aVJ\",\"title_wrapper\":\"DayProducts_title_wrapper__pN9XH\",\"title\":\"DayProducts_title__hI+f+\"};","import AddItemDiaryBtn from 'components/Buttons/AddItemDiaryBtn/AddItemDiaryBtn';\r\nimport EmptyList from '../EmptyList/EmptyList';\r\nimport ProductsTable from '../ProductsTable/ProductsTable';\r\nimport { PRODUCTS_ROUTE } from 'routes/constants';\r\n\r\nimport products from '../../../data/dayproducts.json';\r\nimport styles from './DayProducts.module.scss';\r\n\r\nconst DayProducts = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.container_scroll}>\r\n        <div className={styles.title_wrapper}>\r\n          <h3 className={styles.title}>Products</h3>\r\n          <AddItemDiaryBtn\r\n            titleLink=\"Add product\"\r\n            titleRoute={PRODUCTS_ROUTE}\r\n          />\r\n        </div>\r\n        {products.length === 0 ? (\r\n          <EmptyList listName={'products'} />\r\n        ) : (\r\n          <ProductsTable products={products} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayProducts;\r\n","import AddItemDiaryBtn from 'components/Buttons/AddItemDiaryBtn/AddItemDiaryBtn';\r\nimport EmptyList from '../EmptyList/EmptyList';\r\nimport { EXERCISES_ROUTE } from 'routes/constants';\r\n\r\nimport styles from '../DayProducts/DayProducts.module.scss';\r\n\r\nconst DayExercises = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.container_scroll}>\r\n        <div className={styles.title_wrapper}>\r\n          <h3 className={styles.title}>Exercises</h3>\r\n          <AddItemDiaryBtn\r\n            titleLink=\"Add exercise\"\r\n            titleRoute={EXERCISES_ROUTE}\r\n          />\r\n        </div>\r\n        <EmptyList listName={'exercises'} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayExercises;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper_diary\":\"Diary_wrapper_diary__Wqsg1\",\"wrapper_calendar\":\"Diary_wrapper_calendar__xNL4c\",\"calendar\":\"Diary_calendar__JmY5k\",\"section_diary\":\"Diary_section_diary__pbrL+\"};","import Title from 'components/Title/Title';\r\nimport DayDashboard from './DayDashboard/DayDashboard';\r\nimport DayProducts from './DayProducts/DayProducts';\r\nimport DayExercises from './DayExercises/DayExercises';\r\n\r\nimport styles from './Diary.module.scss';\r\n\r\nconst Diary = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper_diary}>\r\n        <div className={styles.wrapper_calendar}>\r\n          <Title text=\"Diary\" className={styles.title} />\r\n          <div className={styles.calendar}>Calendar</div>\r\n        </div>\r\n\r\n        <div className={styles.section_diary}>\r\n          <DayDashboard />\r\n          <div>\r\n            <DayProducts />\r\n            <DayExercises />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n","import Container from 'components/Container/Container';\r\nimport Section from 'components/Section/Section';\r\nimport Diary from 'components/Diary/Diary';\r\n\r\nconst DiaryPage = () => {\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        <Diary />\r\n      </Section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DiaryPage;\r\n","const capitalizedWord = string => {\r\n  const newString = string.slice(0, 1).toUpperCase() + string.slice(1);\r\n  return newString;\r\n};\r\n\r\nexport default capitalizedWord;\r\n"],"names":["_ref","children","_jsx","className","styles","statisticsName","statisticsIcon","statisticsValue","statisticsPrimary","_ref$fulfilledNorm","fulfilledNorm","statClasses","push","_Fragment","_jsxs","join","Svg","iconId","concat","text","titleClass","dailyCalorieIntake","caloriesConsumed","isSportsRemaining","StatisticsCard","titleLink","titleRoute","NavLink","to","listName","urlAlphabet","products","map","_ref2","_id","title","category","calories","weight","groupBloodNotAllowed","recommended","Object","values","some","value","capitalizedWord","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","scopedUrlAlphabet","nanoid","AddItemDiaryBtn","PRODUCTS_ROUTE","EmptyList","ProductsTable","EXERCISES_ROUTE","Title","DayDashboard","DayProducts","DayExercises","Container","Section","Diary","string","slice","toUpperCase"],"sourceRoot":""}